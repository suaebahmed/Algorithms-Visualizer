{"version":3,"sources":["icons/path-finding.png","icons/sort-algo.png","icons/prime-spiral.png","icons/nqueens.png","algorithm/path/A_star_algo.js","algorithm/maze/basic-maze.js","algorithm/path/bfs.js","algorithm/path/dfs.js","algorithm/path/dijkstra.js","algorithm/maze/randomized_dfs.js","algorithm/maze/recursive_division.js","components/Navbar.js","components/Modal.js","Pages/PathfindingVS.js","components/Card.js","components/Footer.js","Pages/Home.js","Pages/Sorting.js","algorithm/prime_spiral.js","Pages/PrimeSpiral.js","Pages/N_Queen.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","dx","dy","Astar","Grid","startNode","endNode","N","M","grid","Array","i","arr","j","push","gScore","x","y","path","close_list","open_list","h","Math","abs","f","length","atLeastValueIdx","curr_node","newOpen_list","tmp","tmpX","tmpY","error","isWall","newGScore","newFScore","includes","basicMaze","rows","cols","r","st","Set","c","floor","random","add","_step","_iterator","_createForOfIteratorHelper","s","n","done","value","err","e","BFS","visited","visitedNodes","queue","front","shift","DFS","d","stack","neighbours","top","pop","dfs_iterative","Dijkstra","distance","priority_queue","cost","sort","a","b","vis","goForward","pr","pc","getNeighbors","Randomized_dfs","ren_id","dfs","recursiveDivision","divide","startRow","endRow","startCol","endCol","mid","ran_id","start","end","Navbar","_ref","msg","react_default","createElement","className","href","Modal","props","popupClickHandle","id","onClick","children","START_NODE_ROW","START_NODE_COL","END_NODE_ROW","END_NODE_COL","InitSR","InitSC","InitER","InitEC","animateTime","Spot","Object","classCallCheck","this","isStart","isEnd","Node","_ref4","pv","onMouseDown","onMouseEnter","onMouseUp","setStartEndNode","allowDrop","preventDefault","drop","data","dataTransfer","getData","dom","document","getElementById","parseInt","attributes","data_type","target","wall","data_x","data_y","classNode","typeId","draggable","onDragStart","setData","onDrop","onDragOver","toString","waitForAnimatoin","_callee6","time","regenerator_default","wrap","_context6","prev","next","abrupt","Promise","resolve","setTimeout","stop","isValid","App","_useState","useState","_useState2","slicedToArray","setGrid","_useState3","_useState4","isMousePress","setIsMousePress","_useState5","_useState6","mazeID","setMazeID","_useState7","_useState8","pathID","setPathID","_useState9","_useState10","animateType","setAnimateTimeType","useEffect","gridInitialize","animateVisitedNodes","_x","_animateVisitedNodes","apply","arguments","asyncToGenerator","mark","_callee4","node","_context4","concat","animateShortestPath","_x2","_animateShortestPath","_callee5","pathNode","_context5","reverse","pathFinding","_callee","btns","obj","_i2","_context","getElementsByClassName","getElementsByTagName","disabled","t0","mazeGenerator","_ref2","_callee2","ar","_context2","createWall","_x3","makeAllCellAsAWall","mazeHandle","_ref3","_callee3","_context3","clearPathHandle","row","col","newGrid","toConsumableArray","animationTimeHandle","type","preStartNode","curStartNode","preEndNode","curEndNode","classList","toggle","Fragment","components_Modal","style","textAlign","display","justify-content","margin-right","width","height","src","title","components_Navbar","margin","onChange","onMouseLeave","map","R","idx_r","key","Value","idx_c","Card","_props$array","array","imgURL","text","alt","Footer","Home","react_router_dom","to","components_Card","img1","img2","img3","img4","BARS","barWidth","SPEED","waitForAnimate","_callee8","sp","_context8","SortingApp","bar","setBar","speed","setSpeed","sortID","setSortID","init","ORGINAL_COLOR","COMP_COLOR","SORTED_COLOR","swap","newBars","bubbleSort","_bubbleSort","_i6","sorted","background","selectionSort","_selectionSort","_callee7","_i7","leastIdx","_context7","insertionSort","_i","transform","partition","low","high","pivot","_x4","quickSort","pi","sent","_x5","_x6","_x7","mergeSort","newArr1","newArr2","_i3","k","idx","_x8","_x9","_x10","startSortingHandle","_ref5","_i4","generateNewArray","backgroundColor","name","htmlFor","event","max","valueAsNumber","min","step","item","prime_Spiral_Generate","num","list","direction","animation_time","PrimeApp","cntPrime","setCntPrime","gridOfNode","isPrime","startPrimeSpiral","SpeedTime","times","N_Queen","gridSize","setGridSize","gridInit","forEach","v","grid1","fill","isSafe","flag","_j","_j2","_j3","_j4","_i5","_j5","_j6","_j7","_i8","_j8","_i9","_j9","_i10","_j10","_i11","_j11","n_queen","q","startHandle","react_router","exact","element","Pages_Home","Pages_PathfindingVS","Sorting","Pages_PrimeSpiral","Pages_N_Queen","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.90aa3b9d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/path-finding.22453ad4.png\";","module.exports = __webpack_public_path__ + \"static/media/sort-algo.b32220b6.png\";","module.exports = __webpack_public_path__ + \"static/media/prime-spiral.aa4f6636.png\";","module.exports = __webpack_public_path__ + \"static/media/nqueens.1a72c07b.png\";","/* \r\nTo see my c++ submission:  \r\nhttps://cses.fi/problemset/result/3677359/\r\n\r\nWant to learn more about a* algorithm please visit\r\n\r\nhttps://www.youtube.com/watch?v=icZj67PTFhc&t=256s\r\nhttps://en.wikipedia.org/wiki/A*_search_algorithm\r\n\r\n*/\r\nvar dx = [0,0,+1,-1]\r\nvar dy = [+1,-1,0,0]\r\n\r\nfunction Astar(Grid,startNode,endNode,N,M){\r\n    var grid = new Array(N);\r\n    for(let i=0; i<N; i++){\r\n        let arr = [];\r\n        for(let j=0; j<M; j++){\r\n            arr.push({gScore: 1e9, x: -1, y: -1});\r\n        }\r\n        grid[i] = arr;\r\n    }\r\n    let path = [], close_list = []; //here close_list means visited Node.\r\n    var open_list = [];\r\n    let h = Math.abs(startNode.x-endNode.x)+Math.abs(startNode.y-endNode.y);\r\n    open_list.push({f:h, x: startNode.x, y: startNode.y});\r\n    grid[startNode.x][startNode.y].gScore = 0;\r\n\r\n    while(open_list.length > 0){\r\n        var atLeastValueIdx = 0;\r\n        for(let i=0; i<open_list.length; i++){\r\n            if(open_list[atLeastValueIdx].f > open_list[i].f){\r\n                atLeastValueIdx = i;\r\n            }\r\n        }\r\n        var curr_node = open_list[atLeastValueIdx];\r\n        close_list.push(curr_node);\r\n        // to remove\r\n        var newOpen_list = [];\r\n        for(var i=0; i<open_list.length; i++) if(i!==atLeastValueIdx) newOpen_list.push(open_list[i]);\r\n        open_list = newOpen_list;\r\n\r\n        // // found the path\r\n        if(curr_node.x === endNode.x && curr_node.y === endNode.y){\r\n            // grid[x][y].x = curr_node.x;\r\n            // grid[x][y].y = curr_node.y;\r\n\r\n            var tmp = {x: curr_node.x, y: curr_node.y};\r\n            path.push({x:tmp.x,y:tmp.y});\r\n\r\n            while(grid[tmp.x][tmp.y].x!==-1  || grid[tmp.x][tmp.y].y!==-1){\r\n                let tmpX = grid[tmp.x][tmp.y].x;\r\n                let tmpY = grid[tmp.x][tmp.y].y;\r\n                tmp.x = tmpX;\r\n                tmp.y = tmpY;\r\n                path.push({x:tmp.x,y:tmp.y});\r\n            }\r\n            return {path,close_list,error:\"\"};\r\n        }\r\n\r\n        for(let i=0; i<4; i++){\r\n            let x = dx[i] + curr_node.x;\r\n            let y = dy[i] + curr_node.y;\r\n            if(!(x>=0 && x<N && y>=0 && y<M) || Grid[x][y].isWall) continue;\r\n\r\n            let newGScore  = grid[curr_node.x][curr_node.y].gScore + 1;\r\n            let HScore = Math.abs(x - endNode.x)+Math.abs(y - endNode.y);\r\n            let newFScore = newGScore + HScore;\r\n\r\n            if(grid[x][y].gScore > newGScore){\r\n                grid[x][y].gScore = newGScore;\r\n                grid[x][y].x = curr_node.x;\r\n                grid[x][y].y = curr_node.y;\r\n                if(!open_list.includes({f: newFScore, x, y})) open_list.push({f: newFScore, x, y});\r\n            }\r\n        }\r\n    }\r\n    return {path,close_list,error:\"path is not found\"};\r\n}\r\n\r\nexport default Astar;","\r\nfunction basicMaze(rows,cols){\r\n    var arr = [];\r\n    for(var r=0; r<rows; r++){\r\n        const st = new Set()\r\n        for(var j=0; j<cols/4; j++){\r\n            var c = Math.floor((Math.random()*100));\r\n            c %= cols;\r\n            st.add(c);\r\n        }\r\n        for(let c of st) arr.push({r,c});\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport default basicMaze;","\r\nvar dx = [0,0,+1,-1]\r\nvar dy = [+1,-1,0,0]\r\n\r\nfunction BFS(Grid,startNode,endNode,N,M){\r\n    var grid = new Array(N);  // newArray - for no reference state-Grid;\r\n    for(let i=0; i<N; i++){\r\n        let arr = [];\r\n        for(let j=0; j<M; j++){\r\n            arr.push({x: -1, y: -1, visited: 0});\r\n        }\r\n        grid[i] = arr;\r\n    }\r\n    var visitedNodes = [];\r\n    var path = [];\r\n\r\n    var queue = [];\r\n    queue.push({x : startNode.x, y: startNode.y});\r\n    grid[startNode.x][startNode.y].visited = 1;\r\n    visitedNodes.push({x: startNode.x, y: startNode.y});\r\n\r\n    while(queue.length > 0){\r\n        var front = queue.shift();\r\n\r\n        for(let i=0; i<4; i++){\r\n            var x = dx[i] + front.x;\r\n            var y = dy[i] + front.y;\r\n\r\n            if(x===endNode.x && y===endNode.y){\r\n                visitedNodes.push({x,y});\r\n                grid[x][y].x = front.x;\r\n                grid[x][y].y = front.y;\r\n                var tmp = {x,y};\r\n                path.push({x:tmp.x,y:tmp.y});   //not reference variable\r\n\r\n                while(grid[tmp.x][tmp.y].x!==-1  || grid[tmp.x][tmp.y].y!==-1){\r\n                    let tmpX = grid[tmp.x][tmp.y].x;\r\n                    let tmpY = grid[tmp.x][tmp.y].y;\r\n                    tmp.x = tmpX;\r\n                    tmp.y = tmpY;\r\n                    path.push({x:tmp.x,y:tmp.y});\r\n                }\r\n                return {path,visitedNodes,error:\"\"};\r\n            }\r\n\r\n            // 0 !== false  output: true\r\n            else if(x>=0 && y>=0 && x<N && y<M && !Grid[x][y].isWall && !grid[x][y].visited){\r\n                grid[x][y].visited = 1;\r\n                visitedNodes.push({x,y});\r\n\r\n                grid[x][y].x = front.x;\r\n                grid[x][y].y = front.y;\r\n                queue.push({x,y});\r\n            }\r\n        }\r\n    }\r\n    return {path,visitedNodes,error:\"Path is not found\"};\r\n}\r\n\r\nexport default BFS;","\r\nvar dx = [+1,-1,0,0]\r\nvar dy = [0,0,+1,-1]\r\n\r\nvar grid = [];\r\nvar visitedNodes = [];\r\nvar path = [];\r\n\r\nfunction dfs_iterative(r,c,endNode,Grid,N,M,d){\r\n    grid[r][c].visited = 1;\r\n    visitedNodes.push({x: r, y: c});\r\n\r\n    let stack = [];\r\n    stack.push({r,c});\r\n    while(stack.length > 0){\r\n        let neighbours = [];\r\n        let top = stack[stack.length-1];\r\n\r\n        // find all neighbours to store in array\r\n        for(let i=0; i<4; i++){\r\n            let x = top.r + dx[i];\r\n            let y = top.c + dy[i];\r\n            if(x>=0 && y>=0 && x<N && y<M && !Grid[x][y].isWall && !grid[x][y].visited){\r\n                neighbours.push({x,y});\r\n            }\r\n        }\r\n        if(neighbours.length > 0){\r\n\r\n            let random = (Math.floor(Math.random()*10))%neighbours.length;\r\n            let x = neighbours[random].x;\r\n            let y = neighbours[random].y;\r\n\r\n            if(x===endNode.x && y===endNode.y){\r\n                visitedNodes.push({x,y});\r\n                grid[x][y].x = top.r;\r\n                grid[x][y].y = top.c;\r\n                return 1;\r\n            }\r\n            else if(x>=0 && y>=0 && x<N && y<M && !Grid[x][y].isWall && !grid[x][y].visited){\r\n                grid[x][y].x = top.r;\r\n                grid[x][y].y = top.c;\r\n                grid[x][y].visited = 1;\r\n                visitedNodes.push({x,y});\r\n                stack.push({r:x,c:y});\r\n            }\r\n        }\r\n        else stack.pop();\r\n    }\r\n    return 0;\r\n}\r\n\r\nfunction DFS(Grid,startNode,endNode,N,M){\r\n    path = []; // make empty for repeated DFS runnig\r\n    visitedNodes = []; \r\n    grid = new Array(N);\r\n\r\n    for(let i=0; i<N; i++){\r\n        let arr = [];\r\n        for(let j=0; j<M; j++){\r\n            arr.push({x: -1, y: -1, visited: 0});\r\n        }\r\n        grid[i] = arr;\r\n    }\r\n    dfs_iterative(startNode.x,startNode.y,endNode,Grid,N,M,0);\r\n    // -------   path  ---------------\r\n    if(grid[endNode.x][endNode.y].x===-1 && grid[endNode.x][endNode.y].y===-1){\r\n        return {path,visitedNodes,error:\"path is not found\"};\r\n    }\r\n    var tmp = {x:endNode.x,y: endNode.y};\r\n    path.push({x:tmp.x,y:tmp.y});\r\n    while(grid[tmp.x][tmp.y].x!==-1  || grid[tmp.x][tmp.y].y!==-1){\r\n        let tmpX = grid[tmp.x][tmp.y].x;\r\n        let tmpY = grid[tmp.x][tmp.y].y;\r\n        tmp.x = tmpX;\r\n        tmp.y = tmpY;\r\n        path.push({x:tmp.x,y:tmp.y});\r\n    }\r\n    return {path,visitedNodes,error:\"\"};\r\n}\r\n\r\nexport default DFS;","var dx = [0,0,+1,-1]\r\nvar dy = [+1,-1,0,0]\r\n\r\nfunction Dijkstra(Grid,startNode,endNode,N,M){\r\n    var visitedNodes = [];\r\n    var path = [];\r\n\r\n    var grid = new Array(N);\r\n    for(let i=0; i<N; i++){\r\n        let arr = [];\r\n        for(let j=0; j<M; j++){\r\n            arr.push({distance: 1e9, x : -1, y : -1});\r\n        }\r\n        grid[i] = arr;\r\n    }\r\n    var priority_queue = [];\r\n    priority_queue.push({cost:0, x: startNode.x, y: startNode.y});\r\n    grid[startNode.x][startNode.y].distance = 0;\r\n    visitedNodes.push({x: startNode.x, y: startNode.y});\r\n\r\n    while(priority_queue.length > 0){\r\n        priority_queue.sort((a,b)=>a-b);\r\n        var top = priority_queue.shift();\r\n        if(top.cost !== grid[top.x][top.y].distance) continue;\r\n\r\n        for(let i=0; i<4; i++){\r\n            var x = dx[i] + top.x;\r\n            var y = dy[i] + top.y;\r\n            if(!(x>=0 && x<N && y>=0 && y<M) || Grid[x][y].isWall) continue;\r\n\r\n\r\n            if(x === endNode.x && y === endNode.y){ // path found\r\n                visitedNodes.push({x,y});\r\n                grid[x][y].x = top.x;\r\n                grid[x][y].y = top.y;\r\n                var tmp = {x,y};\r\n                path.push({x:tmp.x,y:tmp.y});\r\n\r\n                while(grid[tmp.x][tmp.y].x!==-1  || grid[tmp.x][tmp.y].y!==-1){\r\n                    let tmpX = grid[tmp.x][tmp.y].x;\r\n                    let tmpY = grid[tmp.x][tmp.y].y;\r\n                    tmp.x = tmpX;\r\n                    tmp.y = tmpY;\r\n                    path.push({x:tmp.x,y:tmp.y});\r\n                }\r\n                return {path,visitedNodes,error:\"\"};\r\n            }\r\n            else if(grid[x][y].distance > 1 + grid[top.x][top.y].distance){\r\n                grid[x][y].distance = 1 + grid[top.x][top.y].distance;\r\n                grid[x][y].x = top.x;\r\n                grid[x][y].y = top.y;\r\n\r\n                visitedNodes.push({x,y});\r\n                priority_queue.push({cost: grid[x][y].distance, x, y});\r\n            }\r\n        }\r\n    }\r\n    return {path,visitedNodes,error:\"path is not found\"};\r\n}\r\n\r\n\r\nexport default Dijkstra;","\r\nvar dx = [+2,-2,0,0]\r\nvar dy = [0,0,+2,-2]\r\n\r\nvar vis = [];\r\nvar visitedNodes = [];\r\n\r\nfunction Randomized_dfs(N,M){\r\n    visitedNodes = [];\r\n    vis = new Array(N);\r\n    for(let i=0; i<N; i++){\r\n        let arr = [];\r\n        for(let j=0; j<M; j++){\r\n            arr.push(false);\r\n        }\r\n        vis[i] = arr;\r\n    }\r\n    dfs(1,1,N,M);\r\n    return visitedNodes;\r\n}\r\n// this function is a iterative DFS\r\nfunction dfs(r,c,N,M){\r\n    vis[r][c] = true;\r\n    visitedNodes.push({r,c});\r\n\r\n    var s = [] // stack()\r\n    s.push({x:r,y:c});\r\n    while(s.length > 0){\r\n        let top = s[s.length-1];\r\n\r\n        let neighbours = getNeighbors(top,N,M);\r\n        if(neighbours.length){\r\n            let ren_id = (Math.floor(Math.random()*10))%neighbours.length;\r\n            goForward(top.x,top.y,neighbours[ren_id][0],neighbours[ren_id][1]);\r\n            s.push({x:neighbours[ren_id][0], y: neighbours[ren_id][1]});\r\n            vis[neighbours[ren_id][0]][neighbours[ren_id][1]] = true;\r\n        }\r\n        else s.pop();\r\n    }\r\n} \r\n// pr => parent-row\r\nfunction goForward(pr,pc,r,c){\r\n    if(r===pr){\r\n        if(c < pc) for(let i=pc-1; i>=c; i--)visitedNodes.push({r,c:i});\r\n        else for(let i=pc+1; i<=c; i++) visitedNodes.push({r,c:i});\r\n                \r\n    }\r\n    else{\r\n        if(r < pr) for(let i=pr-1; i>=r; i--) visitedNodes.push({r:i,c});\r\n        else for(let i=pr+1; i<=r; i++)visitedNodes.push({r:i,c});\r\n    }\r\n}\r\n\r\nfunction getNeighbors(top,N,M){\r\n    let arr = [];\r\n    for(let i=0; i<4; i++){\r\n        let x = top.x + dx[i];\r\n        let y = top.y + dy[i];\r\n        if(x>=0 && y>=0 && x<N && y<M && !vis[x][y]){\r\n            arr.push([x,y]);\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\nexport default Randomized_dfs;\r\n","var vis = [];\r\nvar visitedNodes = [];\r\n\r\nfunction recursiveDivision(N,M){\r\n    visitedNodes = [];\r\n    vis = new Array(N);\r\n    for(let i=0; i<N; i++){\r\n        let arr = [];\r\n        for(let j=0; j<M; j++){\r\n            arr.push(false);\r\n        }\r\n        vis[i] = arr;\r\n    }\r\n    //All around of the grid..\r\n    for(let i=0; i<M; i++){\r\n        visitedNodes.push({r:0,c:i});\r\n        vis[0][i] = true;\r\n    }\r\n    for(let i=1; i<N; i++){\r\n        visitedNodes.push({r:i,c:M-1});\r\n        vis[i][M-1] = true;\r\n    }\r\n    for(let i=M-2; i>=0; i--){\r\n        visitedNodes.push({r:N-1,c:i});\r\n        vis[N-1][i] = true;\r\n    }\r\n    for(let i=N-2; i>0; i--){\r\n        visitedNodes.push({r:i,c:0});\r\n        vis[i][0] = true;\r\n    }\r\n\r\n    divide(1,N-2,1,M-2);\r\n    return visitedNodes;\r\n}\r\n\r\nfunction divide(startRow,endRow,startCol,endCol){\r\n    if(endRow-startRow<=1 && endCol-startCol<=1) return;\r\n    if(endRow-startRow > endCol-startCol){\r\n        let mid = Math.floor((startRow+endRow)/2);\r\n        let ran_id = Math.floor((Math.random()*100)%(endCol-startCol+1))+startCol;\r\n\r\n        let start = startCol;\r\n        if(vis[mid][startCol-1]===false){\r\n            ran_id = start;\r\n            start++;\r\n        }\r\n        let end = endCol;\r\n        if(vis[mid][endCol+1]===false){\r\n            ran_id = end;\r\n            end--;\r\n        }\r\n        for(let i=start; i<=end; i++){\r\n            if(i !== ran_id){\r\n                visitedNodes.push({r:mid,c:i});\r\n                vis[mid][i] = true;\r\n            }\r\n        }\r\n        divide(startRow,mid-1,startCol,endCol);\r\n        divide(mid+1,endRow,startCol,endCol);\r\n    }\r\n    else{\r\n        let mid = Math.floor((startCol+endCol)/2);\r\n        let ran_id = Math.floor((Math.random()*100)%(endRow-startRow+1))+startRow;\r\n\r\n        let start = startRow;\r\n        if(vis[startRow-1][mid]===false){\r\n            ran_id = start;\r\n            start++;\r\n        }\r\n        let end = endRow;\r\n        if(vis[end+1][mid]===false){\r\n            ran_id = end;\r\n            end--;\r\n        }\r\n        for(let i=start; i<=end; i++){\r\n            if(i !== ran_id){\r\n                visitedNodes.push({r:i,c:mid});\r\n                vis[i][mid] = true;\r\n            }\r\n        }\r\n        divide(startRow,endRow,startCol,mid-1);\r\n        divide(startRow,endRow,mid+1,endCol);\r\n    }\r\n}\r\n\r\nexport default recursiveDivision;","import React from 'react'\r\nimport '../styles/navbar.css';\r\n\r\nfunction Navbar({msg}) {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div>\r\n        <a className='navbarlink' href='/algorithms-visualizer'>\r\n          Home\r\n        </a>\r\n      </div>\r\n      <div className=\"nav-title\">\r\n        <div className=\"nav-title-hd\">{msg}</div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nexport default Navbar;","import React from 'react';\r\nimport '../styles/modal.css';\r\n\r\nfunction Modal(props) {\r\n  const {popupClickHandle} = props;\r\n  return (\r\n    <div id='popup' className='unActive'>\r\n        <span onClick={popupClickHandle} className=\"close\">&times;</span>\r\n        <div className='modal-container'>\r\n          {props.children}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React,{useEffect, useState} from 'react'\r\nimport '../styles/PathfindingVS.css';\r\nimport Astar from '../algorithm/path/A_star_algo';\r\nimport basicMaze from '../algorithm/maze/basic-maze';\r\nimport BFS from '../algorithm/path/bfs';\r\nimport DFS from '../algorithm/path/dfs';\r\nimport Dijkstra from '../algorithm/path/dijkstra';\r\nimport Randomized_dfs from '../algorithm/maze/randomized_dfs';\r\nimport recursiveDivision from '../algorithm/maze/recursive_division';\r\nimport Navbar from '../components/Navbar';\r\nimport Modal from '../components/Modal';\r\n\r\n/*\r\nsuper(props);// call the super class constructor and pass in the props parameter\r\n*/\r\n\r\nvar rows = 17;\r\nvar cols = 31;\r\n\r\nvar START_NODE_ROW = 4, START_NODE_COL = 6;\r\nvar END_NODE_ROW = rows-6, END_NODE_COL = cols-6;\r\nvar InitSR = START_NODE_ROW, InitSC = START_NODE_COL;\r\nvar InitER = END_NODE_ROW, InitEC = END_NODE_COL;\r\n\r\nvar animateTime = 35; // 8,35,80\r\n\r\nfunction App(){\r\n    const [Grid,setGrid] = useState([]);  // array destructuring\r\n    const [isMousePress,setIsMousePress] = useState(false);\r\n    const [mazeID,setMazeID] = useState(0);\r\n    const [pathID,setPathID] = useState(0);\r\n    const [animateType,setAnimateTimeType] = useState(2);\r\n\r\n\r\n    useEffect(()=>{\r\n        gridInitialize();\r\n        popupClickHandle();\r\n    },[])\r\n\r\n    const gridInitialize =()=>{\r\n        var grid = new Array(rows);\r\n        for(let i=0; i<rows; i++) grid[i] = new Array(cols);\r\n\r\n        for(let i=0; i<rows; i++){\r\n            for(let j=0; j<cols; j++){\r\n                grid[i][j] = new Spot(i,j);\r\n            }\r\n        }\r\n        /* -- add neighbors of each node ---\r\n        for(let i=0; i<rows; i++){\r\n            for(let j=0; j<cols; j++){\r\n                grid[i][j].getNeighbors(grid);\r\n            }\r\n        } */\r\n        setGrid(grid);\r\n    }\r\n    // animate the algorithm\r\n    async function animateVisitedNodes(visitedNodes){\r\n        for(let i=0; i<visitedNodes.length; i++){\r\n            const node = visitedNodes[i];\r\n            await waitForAnimatoin(animateTime);\r\n            if(node.x === START_NODE_ROW && node.y === START_NODE_COL)\r\n            document.getElementById(`row${node.x}_col${node.y}`).className = \"node-visited START_NODE\";\r\n\r\n            else if(node.x === END_NODE_ROW && node.y === END_NODE_COL)\r\n            document.getElementById(`row${node.x}_col${node.y}`).className = \"node-visited END_NODE\";\r\n\r\n            else document.getElementById(`row${node.x}_col${node.y}`).className = \"node-visited\";\r\n        }\r\n    }\r\n    async function animateShortestPath(pathNode){\r\n        pathNode.reverse();\r\n        for(let i=0; i<pathNode.length; i++){\r\n            const node = pathNode[i];\r\n            await waitForAnimatoin(animateTime);\r\n            if(i===0) \r\n            document.getElementById(`row${node.x}_col${node.y}`).className = \"shortestPath START_NODE\";\r\n            else if(i+1 === pathNode.length) \r\n            document.getElementById(`row${node.x}_col${node.y}`).className = \"shortestPath END_NODE\";\r\n            else document.getElementById(`row${node.x}_col${node.y}`).className = \"shortestPath\";\r\n        }\r\n    }\r\n\r\n    const pathFinding = async () =>{\r\n        var btns = document.getElementsByClassName('button-4');\r\n        document.getElementsByTagName('select')[0].disabled = true;\r\n        document.getElementsByTagName('select')[1].disabled = true;\r\n        for(let i=0; i<btns.length; i++){\r\n            btns[i].disabled = true;\r\n        }\r\n\r\n        var startNode = Grid[START_NODE_ROW][START_NODE_COL];\r\n        var endNode = Grid[END_NODE_ROW][END_NODE_COL];\r\n\r\n        switch(pathID){\r\n            case 1:\r\n                var obj = BFS(Grid,startNode,endNode,rows,cols);\r\n                await animateVisitedNodes(obj.visitedNodes);\r\n                await animateShortestPath(obj.path);\r\n            break;\r\n            case 2:\r\n                obj = DFS(Grid,startNode,endNode,rows,cols);\r\n                await animateVisitedNodes(obj.visitedNodes);\r\n                await animateShortestPath(obj.path);\r\n            break;\r\n            case 3:\r\n                obj = Dijkstra(Grid,startNode,endNode,rows,cols);\r\n                await animateVisitedNodes(obj.visitedNodes);\r\n                await animateShortestPath(obj.path);\r\n            break;\r\n            default:\r\n                obj = Astar(Grid,startNode,endNode,rows,cols);\r\n                await animateVisitedNodes(obj.close_list);\r\n                await animateShortestPath(obj.path);\r\n            break;\r\n        }\r\n        document.getElementsByTagName('select')[0].disabled = false;\r\n        document.getElementsByTagName('select')[1].disabled = false;\r\n        for(let i=0; i<btns.length; i++){\r\n            btns[i].disabled = false;\r\n        }\r\n    }\r\n\r\n    const mazeGenerator = async (ar) =>{\r\n        for(var i=0; i<ar.length; i++){\r\n            if((ar[i].r===START_NODE_ROW && ar[i].c===START_NODE_COL) || \r\n            (ar[i].r===END_NODE_ROW && ar[i].c===END_NODE_COL)) continue;\r\n                await waitForAnimatoin(animateTime);\r\n                createWall(ar[i].r,ar[i].c);\r\n        }\r\n    }\r\n    const makeAllCellAsAWall = () =>{\r\n        for(let i=0; i<rows; i++){\r\n            for(let j=0; j<cols; j++){\r\n                if(!((i===START_NODE_ROW && j===START_NODE_COL) || (i===END_NODE_ROW && j===END_NODE_COL))){\r\n                    createWall(i,j);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const mazeHandle = async () =>{        \r\n        var arr = [];\r\n        switch(mazeID){\r\n            case 1:\r\n                arr = basicMaze(rows,cols);\r\n                mazeGenerator(arr);\r\n            break;\r\n            case 2:\r\n                makeAllCellAsAWall();\r\n                arr = Randomized_dfs(rows,cols);\r\n                mazeGenerator(arr);\r\n            break;\r\n            case 3: // recursive division\r\n                arr = recursiveDivision(rows,cols);\r\n                mazeGenerator(arr);\r\n            break;\r\n            default:\r\n        }\r\n    }\r\n    const clearPathHandle = () =>{\r\n        for(let i=0; i<rows; i++){\r\n            for(let j=0; j<cols; j++){\r\n                if(i===START_NODE_ROW && j===START_NODE_COL){\r\n                    document.getElementById(`row${i}_col${j}`).className = \"square START_NODE\";\r\n                }\r\n                else if(i===END_NODE_ROW && j===END_NODE_COL){\r\n                    document.getElementById(`row${i}_col${j}`).className = \"square END_NODE\";\r\n                }\r\n                else if(!Grid[i][j].isWall)\r\n                document.getElementById(`row${i}_col${j}`).className = \"square\";\r\n            }\r\n        }\r\n    }\r\n\r\n    const createWall=(row,col)=>{\r\n        /*\r\n            ********* the concept should be known array reference and copy *****\r\n        */\r\n        var newGrid = [...Grid] // array copy\r\n        var node = newGrid[row][col];\r\n        node.isWall = !node.isWall;\r\n        newGrid[row][col] = node;\r\n        setGrid(newGrid);\r\n    }\r\n\r\n    const onMouseDown = (row,col)=>{\r\n        if(isValid(row,col)){\r\n            setIsMousePress(true);\r\n            createWall(row,col);\r\n        }\r\n    }\r\n    const onMouseEnter = (row,col)=>{\r\n        if(isMousePress === true && isValid(row,col)){\r\n            createWall(row,col);\r\n        }\r\n    }\r\n    const onMouseUp = ()=>{\r\n        setIsMousePress(()=>false);\r\n    }\r\n    const animationTimeHandle = (type) =>{\r\n        if(type === 1) animateTime = 8;\r\n        else if(type === 2) animateTime = 35;\r\n        else animateTime = 80;\r\n        setAnimateTimeType(type);\r\n    }\r\n\r\n    const setStartEndNode = (id, r, c) =>{\r\n        if(id === 1){\r\n            let newGrid = [...Grid] // array copy\r\n            let preStartNode = newGrid[START_NODE_ROW][START_NODE_COL];\r\n            let curStartNode = newGrid[r][c];\r\n            preStartNode.isStart = !preStartNode.isStart;\r\n            curStartNode.isStart = !curStartNode.isStart;\r\n            setGrid(newGrid);\r\n\r\n            START_NODE_ROW = r;\r\n            START_NODE_COL = c;\r\n        }\r\n        else{\r\n            let newGrid = [...Grid] // array copy\r\n            let preEndNode = newGrid[END_NODE_ROW][END_NODE_COL];\r\n            let curEndNode = newGrid[r][c];\r\n            preEndNode.isEnd = !preEndNode.isEnd;\r\n            curEndNode.isEnd = !curEndNode.isEnd;\r\n            setGrid(newGrid);\r\n\r\n            END_NODE_ROW = r;\r\n            END_NODE_COL = c;\r\n        } \r\n    }\r\n    const popupClickHandle = () =>{\r\n        var blur = document.getElementById(\"Container-blur\");\r\n        blur.classList.toggle('active');\r\n        var popup = document.getElementById(\"popup\");\r\n        popup.classList.toggle('unActive');\r\n    }\r\n\r\n    return (\r\n    <>\r\n    <Modal popupClickHandle = {popupClickHandle}>\r\n        <h1 style={{\"textAlign\":\"center\"}}>Video Tutorial</h1>\r\n        <div style={{\"display\":\"flex\",\"justify-content\":\"center\",\"margin-right\":\"15px\"}}>\r\n            <iframe width=\"90%\" height=\"300px\" src=\"https://www.youtube.com/embed/iK95rIRVbMo?autoplay=1&mute=1\" title='myVideo'>\r\n            </iframe> \r\n        </div>\r\n    </Modal>\r\n\r\n    <div id=\"Container-blur\">\r\n        <Navbar msg='Path Finder Visualizer'></Navbar>\r\n        <div className='path-container'>\r\n            <div className='path-header'>\r\n                    <div>\r\n                        <div style={{\"display\":\"flex\",\"margin\":\"6px auto\"}}>\r\n                            <div>\r\n                                <button className='button-4 start-btn' onClick={pathFinding}>Find the possible path</button>\r\n                            </div>\r\n                            <div>\r\n                                <select className='my-drop-down' value={pathID} onChange={(e)=>{setPathID(parseInt(e.target.value))}}>\r\n                                    <option value=\"0\">A-Star Search</option>\r\n                                    <option value=\"1\">Breadth-First Search</option>\r\n                                    <option value=\"2\">Depth-First Search</option>\r\n                                    <option value=\"3\">Dijkstra</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div className='path-speed-btns'>\r\n                            <button className={`button-1 ${animateType===1 && 'curr-speed-btn'}`} onClick={()=>animationTimeHandle(1)}>Fast</button>\r\n                            <button className={`button-1 ${animateType===2 && 'curr-speed-btn'}`} onClick={()=>animationTimeHandle(2)}>Average</button>\r\n                            <button className={`button-1 ${animateType===3 && 'curr-speed-btn'}`} onClick={()=>animationTimeHandle(3)}>Slow</button>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <div style={{\"display\":\"flex\",\"margin\":\"6px auto\"}}>\r\n                            <select className='my-drop-down' value={mazeID} onChange={(e)=>{setMazeID(parseInt(e.target.value))}}>\r\n                                <option className='my-drop-down-option' disabled value=\"0\">Select Maze</option>\r\n                                <option value=\"1\">Random basic maze</option>\r\n                                <option value=\"2\">Randomized_dfs</option>\r\n                                <option value=\"3\">Recursive division</option>\r\n                                {/* <option value=\"4\">Kruskal's algorithm</option>\r\n                                <option value=\"5\">Prim's algorithm</option> */}\r\n                            </select>\r\n                            <button className='button-4 start-maze-btn' onClick={mazeHandle}>Create Maze</button>\r\n                            <button className='button-4' onClick={gridInitialize}>Clear walls</button>\r\n                        </div>\r\n                        <div style={{\"display\":\"flex\"}}>\r\n                            <button className='button-4' onClick={clearPathHandle}>Clear path</button>\r\n                            <button className='button-4' onClick={()=>{\r\n                                START_NODE_ROW = InitSR;\r\n                                START_NODE_ROW = InitSC;\r\n                                END_NODE_ROW = InitER;\r\n                                END_NODE_COL = InitEC;\r\n                                clearPathHandle();\r\n                                gridInitialize();\r\n                            }}>\r\n                                Reset board\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n            <div className='grid'>\r\n                <div onMouseLeave={()=>{setIsMousePress(false)}}>\r\n                {/* JSX Node Of Grid (2D Array) */}\r\n                {Grid.map((R,idx_r)=>{\r\n                return (<div key={idx_r} className='ROW'>\r\n                            {R.map((Value,idx_c)=>{\r\n                                    const {x,y,isStart,isEnd,isWall} = Value;\r\n                                    return <Node key={idx_c} \r\n                                    pv={{x,y,isStart,isEnd,isWall,onMouseDown,onMouseEnter,onMouseUp,setStartEndNode}}>\r\n                                    </Node>\r\n                                })\r\n                            }\r\n                        </div>)\r\n                })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n    )\r\n}\r\n\r\nclass Spot {\r\n    constructor(i, j) {\r\n        this.x = i;\r\n        this.y = j;\r\n        this.isWall = false;\r\n        this.isStart = (i===START_NODE_ROW && j===START_NODE_COL);\r\n        this.isEnd = (i===END_NODE_ROW && j===END_NODE_COL);\r\n        \r\n        /*\r\n        ----  below information we don't use after 16 number of commits in github ---\r\n        this.f = 1e9;\r\n        this.g = 1e9;\r\n        this.previous = undefined;\r\n        this.neighbors = [];\r\n        this.getNeighbors = function(grid){\r\n            if(i > 0) this.neighbors.push(grid[i-1][j]); // up\r\n            if(j > 0) this.neighbors.push(grid[i][j-1]); // left\r\n\r\n            if(i+1<rows) this.neighbors.push(grid[i+1][j]); // down\r\n            if(j+1<cols) this.neighbors.push(grid[i][j+1]); // right\r\n        }\r\n        */\r\n    }\r\n}\r\n\r\nfunction Node({pv}){\r\n    const {x,y,isStart,isEnd,isWall,onMouseDown,onMouseEnter,onMouseUp,setStartEndNode} = pv;\r\n    const allowDrop=(e)=>{e.preventDefault();}\r\n    const drag=(e)=>{e.dataTransfer.setData(\"myID\", e.target.id);}\r\n    const drop=(e)=>{\r\n        e.preventDefault();\r\n        var data = e.dataTransfer.getData(\"myID\");\r\n        var dom = document.getElementById(data);\r\n        var id = parseInt(dom.attributes.data_type.value);\r\n        if(e.target.attributes.data_type.value !== \"3\" || e.target.attributes.wall.value === \"true\") return;\r\n        \r\n        // call the function\r\n        var r = parseInt(e.target.attributes.data_x.value)\r\n        var c = parseInt(e.target.attributes.data_y.value)\r\n        setStartEndNode(id,r,c);\r\n    }\r\n\r\n    var classNode = isStart?\"START_NODE\":(isEnd?\"END_NODE\":(isWall?\"obtacle\":\"\"));\r\n    var typeId = isStart?\"1\":(isEnd?\"2\":\"3\");\r\n\r\n    if(isStart || isEnd){\r\n        return (\r\n            <div \r\n            className={'square '+classNode} id={'row'+x+'_col'+y}\r\n            data_x={x} \r\n            data_y={y} \r\n            data_type={typeId} \r\n            wall=\"false\"\r\n            draggable=\"true\"\r\n            onDragStart={drag} \r\n            onDrop={drop} \r\n            onDragOver={allowDrop}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <div onMouseDown={(e)=>{\r\n                e.preventDefault(); // it is necessary\r\n                onMouseDown(x,y)}\r\n            } \r\n            onMouseEnter={(e)=>{\r\n                e.preventDefault();\r\n                onMouseEnter(x,y)}\r\n            } \r\n            onMouseUp={(e)=>{\r\n                e.preventDefault();\r\n                onMouseUp()}\r\n            } \r\n            className={'square '+classNode} id={'row'+x+'_col'+y}\r\n            data_x={x} \r\n            data_y={y} \r\n            data_type={typeId} \r\n            wall={isWall.toString()}\r\n            onDrop={drop} \r\n            onDragOver={allowDrop}\r\n            >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nasync function waitForAnimatoin(time){\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{\r\n            resolve('');\r\n        },time)\r\n    })\r\n}\r\nconst isValid = (r,c) =>{\r\n    if((r===START_NODE_ROW && c===START_NODE_COL) || (r===END_NODE_ROW && c===END_NODE_COL)) return 0;\r\n    else return 1;\r\n}\r\nexport default App;","import React from 'react';\r\nimport '../styles/card.css';\r\n\r\nfunction Card(props) {\r\n  const [imgURL,text] = props.array;\r\n  return (\r\n    <div className='card-body'>\r\n      <div style={{'width': \"100%\", \"height\":\"70%\"}}>\r\n        <img className='card-img' src={imgURL} alt=\"\"></img>\r\n      </div>\r\n      <div className='card-bottom'>\r\n        <p>{text}</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport '../styles/footer.css'\r\n\r\nexport default function Footer() {\r\n  return (\r\n    <div className='footer'>\r\n        <p>Copyright <span>&#9400;</span> Suaeb Ahmed - All Rights Reversed.</p>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport Card from '../components/Card';\r\nimport Footer from '../components/Footer';\r\nimport Navbar from '../components/Navbar'\r\nimport '../styles/home.css';\r\nimport img1 from '../icons/path-finding.png';\r\nimport img2 from '../icons/sort-algo.png';\r\nimport img3 from '../icons/prime-spiral.png';\r\nimport img4 from '../icons/nqueens.png';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"container\">\r\n      <Navbar msg={'Wellcome To My Algorithms Visualizer'}></Navbar>\r\n      <h1 style={{\"textAlign\": \"center\"}}>A Better Visualization Of Different Algorithms</h1>\r\n\r\n      <div className='cards-container'>\r\n        <Link className='no_underline' to=\"/path-finding\">\r\n          <Card array={[img1,\"Path-Finder\"]}/>\r\n        </Link>\r\n        <Link className='no_underline' to=\"/sorting\">\r\n          <Card array={[img2,\"Sorting Algorithms\"]}/>\r\n        </Link>\r\n        <Link className='no_underline' to=\"/spiral-prime\">\r\n          <Card array={[img3,\"Spiral Primes\"]}/>\r\n        </Link>\r\n        <Link className='no_underline' to=\"/nqueens\">\r\n          <Card array={[img4,\"N queens problem\"]}/>\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Footer only has for Home page*/}\r\n      <Footer></Footer> \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from 'react';\r\nimport '../styles/sorting.css';\r\nimport Navbar from '../components/Navbar';\r\nimport Modal from '../components/Modal';\r\n\r\nvar BARS = 100;\r\nconst barWidth = 15;\r\nvar SPEED = 500;\r\n\r\nasync function waitForAnimate(sp){\r\n    sp = sp < 5? 5 : sp;\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{resolve('')},sp);\r\n    })\r\n}\r\n\r\n/*\r\n    ** https://blog.logrocket.com/why-react-doesnt-update-state-immediately/\r\n\r\n    // speed variable doesn't work but work for global variable\r\n    // it's need for input range dom update\r\n*/\r\n\r\nfunction SortingApp(){\r\n    const [bar,setBar] = useState([80,40,20,70,30]);\r\n    var [speed,setSpeed] = useState(SPEED); \r\n    const [sortID,setSortID] = useState(3);\r\n\r\n    useEffect(()=>{\r\n        init(); \r\n        popupClickHandle();\r\n    },[])\r\n\r\n    const init=()=>{\r\n        var arr = [];\r\n        for(let i=0; i<BARS; i++){\r\n            let x = Math.floor(Math.random()*1000)%400;\r\n            arr.push(x);\r\n        }\r\n        setBar(arr);\r\n    }\r\n    var ORGINAL_COLOR = '#3498DB';\r\n    var COMP_COLOR = '#FF5959';\r\n    var SORTED_COLOR = '#6C3483';\r\n    var PIVOT_COLOR = 'orange';\r\n\r\n    const swap = (i,j,newBars) => {\r\n        document.getElementById('bar-'+i).style.height = newBars[j]+'px';\r\n        document.getElementById('bar-'+j).style.height = newBars[i]+'px';\r\n\r\n        var tmp = newBars[i];\r\n        newBars[i] = newBars[j];\r\n        newBars[j] = tmp;\r\n    }\r\n    // -----------  All Sorting Algorithm  -----------\r\n    async function bubbleSort(){\r\n        var newBars = []; //copy the array\r\n        for(let i=0; i<bar.length; i++) newBars.push(bar[i]);\r\n\r\n        for(var i=0; i<newBars.length; i++){\r\n            for(var j=0; j<newBars.length-1-i; j++){\r\n                \r\n                document.getElementById('bar-'+j).style.background =  COMP_COLOR;\r\n                document.getElementById('bar-'+(j+1)).style.background = COMP_COLOR;\r\n                // we control animation speed with async/await and Promise.\r\n                await waitForAnimate(SPEED); // global var\r\n                document.getElementById('bar-'+j).style.background = ORGINAL_COLOR\r\n                document.getElementById('bar-'+(j+1)).style.background = ORGINAL_COLOR;\r\n\r\n\r\n                if(newBars[j] > newBars[j+1]){\r\n                    swap(j,j+1,newBars);\r\n                }\r\n            }\r\n            var sorted = newBars.length-1-i;\r\n            document.getElementById('bar-'+sorted).style.background = SORTED_COLOR;\r\n        }\r\n    }\r\n    async function selectionSort(){\r\n        var newBars = [];\r\n        for(let i=0; i<bar.length; i++) newBars.push(bar[i]);\r\n        \r\n        for(var i=0; i<newBars.length; i++){\r\n            var leastIdx = i;\r\n            document.getElementById('bar-'+leastIdx).style.background = 'black';\r\n\r\n            for(var j=i+1; j<newBars.length; j++){\r\n                document.getElementById('bar-'+j).style.background = COMP_COLOR;\r\n                await waitForAnimate(SPEED); // global var\r\n                document.getElementById('bar-'+j).style.background = ORGINAL_COLOR;\r\n\r\n                if(newBars[j] < newBars[leastIdx]){\r\n                    document.getElementById('bar-'+leastIdx).style.background = ORGINAL_COLOR;\r\n                    leastIdx = j;\r\n                    document.getElementById('bar-'+leastIdx).style.background = 'black';\r\n                }\r\n            }\r\n            // swap\r\n            swap(i,leastIdx,newBars);\r\n            document.getElementById('bar-'+leastIdx).style.background = ORGINAL_COLOR;\r\n            document.getElementById('bar-'+i).style.background = SORTED_COLOR\r\n        }\r\n    }\r\n    const insertionSort = async () =>{\r\n        var newBars = [];\r\n        for(let i=0; i<bar.length; i++) newBars.push(bar[i]);\r\n        \r\n        for(var i=1; i<newBars.length; i++){\r\n            var tmp = newBars[i], j = i-1;\r\n            document.getElementById('bar-'+i).style.transform = 'translateY(15px)'\r\n\r\n            while(j>=0 && newBars[j] > tmp){\r\n                document.getElementById('bar-'+j).style.background = COMP_COLOR;\r\n                document.getElementById('bar-'+(j+1)).style.background = PIVOT_COLOR;\r\n\r\n                await waitForAnimate(SPEED);\r\n                newBars[j+1] = newBars[j];\r\n                document.getElementById('bar-'+(j+1)).style.height = newBars[j]+'px';\r\n                document.getElementById('bar-'+(j+1)).style.background = SORTED_COLOR;\r\n                j--;\r\n            }\r\n            newBars[j+1] = tmp;\r\n            document.getElementById('bar-'+(j+1)).style.height = tmp+'px';\r\n            document.getElementById('bar-'+(j+1)).style.background = SORTED_COLOR;\r\n            document.getElementById('bar-'+i).style.transform = 'translateY(0px)';\r\n        }\r\n    }\r\n    const partition = async (low,high,array) =>{\r\n        let pivot = high, i = low;\r\n        document.getElementById('bar-'+pivot).style.background = PIVOT_COLOR;\r\n\r\n        for(let j=low; j<high; j++){\r\n            document.getElementById('bar-'+j).style.background = COMP_COLOR;\r\n            document.getElementById('bar-'+i).style.background = COMP_COLOR;\r\n            await waitForAnimate(SPEED);\r\n            document.getElementById('bar-'+j).style.background = ORGINAL_COLOR;\r\n            document.getElementById('bar-'+i).style.background = ORGINAL_COLOR;\r\n\r\n            if(array[j] <= array[pivot]){\r\n                swap(i,j,array);\r\n                i++;\r\n            }\r\n        }\r\n        swap(i,pivot,array);\r\n        document.getElementById('bar-'+pivot).style.background = ORGINAL_COLOR;\r\n        return i;\r\n    }\r\n\r\n    const quickSort = async (low,high,array) =>{\r\n        if(low >= high) return;\r\n        let pi = await partition(low,high,array);\r\n        await quickSort(low,pi-1,array);\r\n        await quickSort(pi+1,high,array);            \r\n    }\r\n\r\n    const mergeSort = async (low,high,array) =>{\r\n        if(low >= high) return;\r\n        var mid = Math.floor((low+high)/2);\r\n        await mergeSort(low,mid,array)\r\n        await mergeSort(mid+1,high,array);\r\n\r\n        // merge the array\r\n        // console.log(low,high, mid);\r\n\r\n        var newArr1 = [], newArr2 = [];\r\n        for(let i=low; i<=mid; i++){\r\n            newArr1.push({x:array[i],idx:i});\r\n        }\r\n        for(let i=mid+1; i<=high; i++){\r\n            newArr2.push({x:array[i],idx:i});\r\n        }\r\n        let i=0, j = 0, k = low;\r\n        while(i<newArr1.length && j<newArr2.length){\r\n            document.getElementById('bar-'+newArr1[i].idx).style.background = COMP_COLOR;\r\n            document.getElementById('bar-'+newArr2[j].idx).style.background = COMP_COLOR;\r\n            await waitForAnimate(SPEED);\r\n            document.getElementById('bar-'+newArr1[i].idx).style.background = SORTED_COLOR;\r\n            document.getElementById('bar-'+newArr2[j].idx).style.background = SORTED_COLOR;\r\n\r\n            if(newArr1[i].x < newArr2[j].x){\r\n                array[k] = newArr1[i].x;\r\n                document.getElementById('bar-'+k).style.height = array[k]+'px';\r\n                i++;\r\n            }\r\n            else{\r\n                array[k] = newArr2[j].x;\r\n                document.getElementById('bar-'+k).style.height = array[k]+'px';\r\n                j++;\r\n            }\r\n            k++;\r\n        }\r\n        while(i<newArr1.length){\r\n            array[k] = newArr1[i].x;\r\n            document.getElementById('bar-'+k).style.height = array[k]+'px';\r\n            document.getElementById('bar-'+k).style.background = SORTED_COLOR;\r\n            i++;\r\n            k++;\r\n        }\r\n        while(j<newArr2.length){\r\n            array[k] = newArr2[j].x;\r\n            document.getElementById('bar-'+k).style.height = array[k]+'px';\r\n            document.getElementById('bar-'+k).style.background = SORTED_COLOR;\r\n            j++;\r\n            k++;\r\n        }\r\n    }\r\n    // -----------  End Sorting Algorithm  ----------\r\n\r\n    const startSortingHandle = async () =>{\r\n        document.getElementsByTagName('button')[0].disabled = true;\r\n        document.getElementsByTagName('button')[1].disabled = true;\r\n        document.getElementsByTagName('select')[0].disabled = true;\r\n        document.getElementsByTagName('select')[1].disabled = true;\r\n\r\n        var newBars = [];\r\n        switch(sortID){\r\n            case 1:\r\n                await selectionSort();\r\n            break;\r\n            case 2:\r\n                await insertionSort();\r\n            break;\r\n            case 3:\r\n                for(let i=0; i<bar.length; i++) newBars.push(bar[i]); \r\n                await quickSort(0,newBars.length-1,newBars);\r\n            break;\r\n            case 4:\r\n                newBars = [];\r\n                for(let i=0; i<bar.length; i++) newBars.push(bar[i]); \r\n                await mergeSort(0,newBars.length-1,newBars);\r\n            break;\r\n            default:\r\n                await bubbleSort();\r\n            break;\r\n        }\r\n        document.getElementsByTagName('button')[0].disabled = false;\r\n        document.getElementsByTagName('button')[1].disabled = false;\r\n        document.getElementsByTagName('select')[0].disabled = false;\r\n        document.getElementsByTagName('select')[1].disabled = false;\r\n        bar.sort((a,b)=>a>b);\r\n    }\r\n\r\n    const rangeValueHandle = (event) =>{    \r\n        SPEED = parseInt(event.target.max)-parseInt(event.target.value);\r\n        setSpeed(event.target.valueAsNumber);\r\n    }\r\n    const sizeHandle = (e) =>{\r\n        BARS = parseInt(e.target.value);\r\n        generateNewArray();\r\n    }\r\n    const generateNewArray = () =>{\r\n        var arr = [];\r\n        for(let i=0; i<BARS; i++){\r\n            let x = Math.floor(Math.random()*1000)%400;\r\n            arr.push(x);\r\n        }\r\n        for(let i=0; i<bar.length; i++){\r\n            var dom = document.getElementById('bar-'+i);\r\n            dom.style.backgroundColor = '#3498DB';\r\n        }\r\n        setBar(arr);\r\n    }\r\n    const popupClickHandle = () =>{\r\n        var blur = document.getElementById(\"Container-blur\");\r\n        blur.classList.toggle('active');\r\n        var popup = document.getElementById(\"popup\");\r\n        popup.classList.toggle('unActive');\r\n    }\r\n    return (\r\n    <>\r\n        {/* pop up modal */}\r\n        <Modal popupClickHandle = {popupClickHandle}>\r\n            <div style={{\"margin-right\":\"20px\"}}>\r\n                <h1 style={{\"textAlign\":\"center\"}}>Some Sorting Algorithms Tutorial</h1>\r\n                <h2>Bubble Sort</h2>\r\n                <p>\r\n                Bubble Sort is a simple sorting algorithm that repeatedly steps through the list, compares adjacent elements and swaps them if they are in the wrong order.The pass through the list is repeated until the list is sorted.\r\n                </p>\r\n                <h3>Performence</h3>\r\n                <ul>\r\n                    <li>Worst-case time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Average time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Best-case time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                </ul>\r\n\r\n                <h2>Selection Sort</h2>\r\n                <p>\r\n                    The selection sort algorithm sorts an array by repeatedly finding the minimum element (considering ascending order) from the unsorted part and putting it at the beginning.\r\n                </p>\r\n                <h3>Performence</h3>\r\n                <ul>\r\n                    <li>Worst-case time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Average time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Best-case time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                </ul>\r\n\r\n                <h2>insertion Sort</h2>\r\n                <p>\r\n                    Insertion sort is a simple sorting algorithm that works similar to the way you sort playing cards in your hands. The array is virtually split into a sorted and an unsorted part. Values from the unsorted part are picked and placed at the correct position in the sorted part.\r\n                </p>\r\n                <h3>Performence</h3>\r\n                <ul>\r\n                    <li>Worst-case time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Average time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Best-case time complexity: <span>O(<em>n</em>)</span></li>\r\n                </ul>\r\n\r\n                <h2>Quick Sort</h2>\r\n                <p>\r\n                    QuickSort is a Divide and Conquer algorithm. It picks an element as a pivot and partitions the given array around the picked pivot. There are many different versions of quickSort that pick pivot in different ways.\r\n                </p>\r\n                <ul>\r\n                    <li>Always pick the first element as a pivot.</li>\r\n                    <li>Always pick the last element as a pivot</li>\r\n                    <li>Pick a random element as a pivot.</li>\r\n                    <li>Pick median as the pivot.</li>\r\n                </ul>\r\n                <p>The key process in quickSort is a partition(). The target of partitions is, given an array and an element x of an array as the pivot, put x at its correct position in a sorted array and put all smaller elements (smaller than x) before x, and put all greater elements (greater than x) after x. All this should be done in linear time.</p>\r\n                <h3>Performence</h3>\r\n                <ul>\r\n                    <li>Worst-case time complexity: <span>O(<em>n<sup>2</sup></em>)</span></li>\r\n                    <li>Average time complexity: <span>O(<em>n</em> log <em>n</em>)</span></li>\r\n                    <li>Best-case time complexity: <span>O(<em>n</em> log <em>n</em>)</span></li>\r\n                </ul>\r\n\r\n                <h2>Merge Sort</h2>\r\n                <p>Merge Sort is an efficient, stable sorting algorithm that makes use of the divide and conquer strategy. Conceptually the algorithm works as follows:</p>\r\n                <ol>\r\n                    <li>Divide the unsorted list into n sublists, each containing one element(a list of one element is considered sorted)</li>\r\n                    <li>Repeatedly merge sublists to produce new sorted sublists until there is only one sublist remaining. This will be the sorted list.</li>\r\n                </ol>\r\n                <h3>Performence</h3>\r\n                <ul>\r\n                    <li>Worst-case time complexity: <span>O(<em>n</em> log <em>n</em>)</span></li>\r\n                    <li>Average time complexity: <span>O(<em>n</em> log <em>n</em>)</span></li>\r\n                    <li>Best-case time complexity: <span>O(<em>n</em> log <em>n</em>)</span></li>\r\n                </ul>\r\n            </div>\r\n        </Modal>\r\n\r\n        <div id=\"Container-blur\">\r\n            <Navbar msg='Sorting Algorithms'></Navbar>\r\n            <div className='sorting-continer'>\r\n                <div className='Btn-Wrap'>\r\n                    <div style={{\"display\":\"flex\"}}>\r\n                        <button className='button-4 start-btn' onClick={startSortingHandle}>Start Sorting</button>\r\n                        <button className='button-4' onClick={generateNewArray}>Generate New</button>\r\n                        <select className='my-drop-down' value={sortID} onChange={(e)=>{setSortID(parseInt(e.target.value));generateNewArray()}} id=\"num1\" name=\"num1\">\r\n                                <option value=\"0\">Bubble Sort</option>\r\n                                <option value=\"1\">Selection Sort</option>\r\n                                <option value=\"2\">Insertion Sort</option>\r\n                                <option value=\"3\">Quick Sort</option>\r\n                                <option value=\"4\">Merge Sort</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className='st-speed-range'>\r\n                        <div className='st-speed-range-lavel'>\r\n                            <label className='sorting-label' htmlFor='range1'>Speed: </label>\r\n                        </div>\r\n                        <div>\r\n                            <input type='range' onChange={rangeValueHandle} name='range1' id = 'range1'\r\n                            min='1' value={speed} max='1000' step='1'></input>\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor='num'>Choose Size: </label>\r\n                        <select className='my-drop-down' value={bar.length} onChange={sizeHandle} id=\"num\" name=\"num\">\r\n                            <option value=\"25\">25</option>\r\n                            <option value=\"50\">50</option>\r\n                            <option value=\"100\">100</option>\r\n                            <option value=\"200\">200</option>\r\n                            <option value=\"350\">350</option>\r\n                            <option value=\"600\">600</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div className='wrapperBar'>\r\n                {\r\n                    bar.map((item,id)=>{\r\n                        return(\r\n                            <div className='bar' id={'bar-'+id} key={id} \r\n                            style={{width:barWidth,height:item}}>\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default SortingApp;","\r\nfunction prime_Spiral_Generate(N){\r\n\r\n    var row = Math.floor(N/2);\r\n    var col = Math.floor(N/2);\r\n    var num = 1, step = 1;\r\n    var list = [];\r\n\r\n    for(let k = 0; k<Math.floor(N/2); k++){\r\n        for(let i=0; i<step; i++){\r\n            list.push({r: row,c: col++, num: num++, direction: 1});\r\n        }\r\n        for(let j=0; j<step; j++){\r\n            list.push({r: row--,c: col, num: num++, direction: 2});\r\n        }\r\n        step++;\r\n        for(let i=0; i<step; i++){\r\n            list.push({r: row,c: col--, num: num++, direction: 3});\r\n\r\n        }\r\n        for(let j=0; j<step; j++){\r\n            list.push({r: row++,c: col, num: num++, direction: 4});\r\n        }\r\n        step++;\r\n    }\r\n    for(let i=1; i<step; i++){\r\n        list.push({r: row,c: col++, num: num++, direction: 1});\r\n    }\r\n    return list;\r\n}\r\n\r\nexport default prime_Spiral_Generate;","import React, { useState, useEffect } from 'react'\r\nimport '../styles/PrimeSpiral.css'\r\nimport prime_Spiral_Generate from '../algorithm/prime_spiral';\r\nimport Navbar from '../components/Navbar';\r\n\r\n// Density of primes = n/ln(n);\r\nconst N = 21;\r\n\r\nfunction PrimeApp(){\r\n    const[Grid,setGrid] = useState([]);\r\n    const[cntPrime, setCntPrime] = useState(0);\r\n\r\n    useEffect(()=>{\r\n        gridInitialize();\r\n    },[])\r\n\r\n    const gridInitialize =()=>{\r\n        var grid = new Array(N);\r\n        for(let i=0; i<N; i++) grid[i] = new Array(N);\r\n        let c = 0;\r\n        for(let i=0; i<N; i++){\r\n            for(let j=0; j<N; j++){\r\n                grid[i][j] = ++c;\r\n            }\r\n        }\r\n        setGrid(grid);\r\n    }\r\n\r\n    const gridOfNode = (\r\n        Grid.map((R,idx_r)=>{\r\n            return (\r\n                <div key={idx_r} className='ROW'>\r\n                    {\r\n                        R.map((value,idx_c)=>{\r\n                            return (\r\n                                <div key={idx_c} className='primeSquare' id={'node-row'+idx_r+'-col'+idx_c}>\r\n                                    <div></div>\r\n                                    <div className='rectangle'></div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                    }\r\n                </div>\r\n            )\r\n        })\r\n    )\r\n    const isPrime = (n) =>{\r\n        if(n < 2) return false;\r\n        for(let i=2; i*i<=n; i++){\r\n            if(n%i===0) return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    const startPrimeSpiral = async () =>{\r\n        document.getElementsByTagName('button')[0].disabled = true;\r\n        var arr = prime_Spiral_Generate(N);\r\n        var c = 0;\r\n        for(let i=0; i<arr.length; i++){\r\n\r\n            var node = document.getElementById('node-row'+arr[i].r+'-col'+arr[i].c);\r\n            if(isPrime(arr[i].num)){\r\n                node.children[0].className = 'circle';\r\n                setCntPrime(++c);\r\n            }\r\n            node.children[1].className = 'rectangle-'+arr[i].direction;\r\n            await waitForAnimatoin(60);\r\n        }\r\n        document.getElementsByTagName('button')[0].disabled = false;\r\n    }\r\n    return (\r\n        <>\r\n            <Navbar msg='Spiral Primes'></Navbar>\r\n            <div className='spiral-continer'>\r\n                <div className='spiral-btns'>\r\n                    <button className='button-4 start-btn' onClick={startPrimeSpiral}>Show Prime spiral</button>\r\n                    <button className='button-4'>{cntPrime} prime numbers found out of {N*N}</button>\r\n                </div>\r\n                <div className='primeGridContainer'>\r\n                    <div>\r\n                    {gridOfNode}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nasync function waitForAnimatoin(animation_time){\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{\r\n            resolve('');\r\n        },animation_time)\r\n    })\r\n}\r\nexport default PrimeApp;","import React, { useEffect, useState } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport '../styles/nqueens.css';\r\n\r\nvar SpeedTime = 600;\r\nfunction N_Queen() {\r\n    const [grid,setGrid] = useState([]);\r\n    const [gridSize, setGridSize] = useState(4);\r\n    const [speed, setSpeed] = useState(600);\r\n\r\n    useEffect(()=>{\r\n        gridInit();\r\n    },[gridSize]);\r\n\r\n    const gridInit = () =>{\r\n        grid.forEach((row,i)=>{\r\n            row.forEach((v,j)=>{\r\n                    if((i+j)%2===0) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell gray-cell\";\r\n                    else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell\";\r\n                })\r\n        })\r\n        let grid1 = new Array(gridSize);\r\n        for(let i=0; i<gridSize; i++) grid1[i] = new Array(gridSize).fill(false);\r\n        setGrid(grid1);\r\n    }\r\n\r\n    var isSafe = async (r,c)=>{\r\n        var flag = 1;\r\n        // row-wise\r\n        for(let j=0; j<c; j++){\r\n            if(grid[r][j]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        for(let j=c+1; j<gridSize; j++){\r\n            if(grid[r][j]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        // col-wise\r\n        for(let i=0; i<r; i++){\r\n            if(grid[i][c]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        for(let i=r+1; i<gridSize; i++){\r\n            if(grid[i][c]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        // right diagonal\r\n        for(let i=r+1,j=c+1; i<gridSize && j<gridSize; i++,j++){\r\n            if(grid[i][j]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        for(let i=r-1,j=c-1; i>=0 && j>=0; i--,j--){\r\n            if(grid[i][j]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        // left diagonal \r\n        for(let i=r+1,j=c-1; i<gridSize && j>=0; i++,j--){\r\n            if(grid[i][j]){\r\n                flag = 0;\r\n                document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img red-cell\";\r\n            }\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n        for(let i=r-1,j=c+1; i>=0 && j<gridSize; i--,j++){\r\n            if(grid[i][j]){\r\n                flag = 0;                \r\n                document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img blue-cell\";\r\n            }\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell blue-cell\";\r\n        }\r\n\r\n        await waitForAnimatoin(SpeedTime);\r\n        // ------------------------- undo ---------------------------\r\n        // row-wise \r\n        for(let j=0; j<c; j++){\r\n            if(grid[r][j]) document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((r+j)%2===0) document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell\";\r\n        }\r\n        for(let j=c+1; j<gridSize; j++){\r\n            if(grid[r][j]) document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((r+j)%2===0) document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${r}-${j}`).classList = \"queen-cell\";\r\n        }\r\n        // col-wise \r\n        for(let i=0; i<r; i++){\r\n            if(grid[i][c]) document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((i+c)%2===0) document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell\";\r\n        }\r\n        for(let i=r+1; i<gridSize; i++){\r\n            if(grid[i][c]) document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((i+c)%2===0) document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${i}-${c}`).classList = \"queen-cell\";\r\n        }\r\n        // right diagonal\r\n        for(let i=r+1,j=c+1; i<gridSize && j<gridSize; i++,j++){\r\n            if(grid[i][j]) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((i+j)%2===0) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell\";\r\n        }\r\n        for(let i=r-1,j=c-1; i>=0 && j>=0; i--,j--){\r\n            if(grid[i][j]) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((i+j)%2===0) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell\";\r\n        }\r\n        // left diagonal \r\n        for(let i=r+1,j=c-1; i<gridSize && j>=0; i++,j--){\r\n            if(grid[i][j]) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((i+j)%2===0) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell\";\r\n        }\r\n        for(let i=r-1,j=c+1; i>=0 && j<gridSize; i--,j++){\r\n            if(grid[i][j]) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell queen-img green-cell\";\r\n            else if((i+j)%2===0) document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${i}-${j}`).classList = \"queen-cell\";\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    var n_queen = async (c,q) =>{\r\n        if(c>=gridSize || q>=gridSize){\r\n            return q>=gridSize;\r\n        }\r\n        for(var r=0; r<gridSize; r++){\r\n            document.getElementById(`cell-${r}-${c}`).classList = \"queen-cell queen-img yellow-cell\";\r\n            await waitForAnimatoin(SpeedTime);\r\n            \r\n            if(await isSafe(r,c)){\r\n                document.getElementById(`cell-${r}-${c}`).classList = \"queen-cell queen-img green-cell\";\r\n                grid[r][c] = true;\r\n                if(await n_queen(c+1,q+1)) return true;\r\n                \r\n                // backtrack\r\n                grid[r][c] = false;\r\n                if((r+c)%2===0) document.getElementById(`cell-${r}-${c}`).classList = \"queen-cell gray-cell\";\r\n                else document.getElementById(`cell-${r}-${c}`).classList = 'queen-cell';\r\n            }\r\n            else if((r+c)%2===0) document.getElementById(`cell-${r}-${c}`).classList = \"queen-cell gray-cell\";\r\n            else document.getElementById(`cell-${r}-${c}`).classList = 'queen-cell';\r\n        }\r\n        return false;\r\n    }\r\n\r\n    const startHandle = async () =>{\r\n        document.getElementsByTagName('button')[0].disabled = true;\r\n        document.getElementsByTagName('button')[1].disabled = true;\r\n        document.getElementById('gridSizeRange').disabled = true;\r\n        await n_queen(0,0);\r\n        document.getElementsByTagName('button')[0].disabled = false;\r\n        document.getElementsByTagName('button')[1].disabled = false;\r\n        document.getElementById('gridSizeRange').disabled = false;\r\n    }\r\n\r\n    const timeHandle = (e) =>{\r\n        let value = parseInt(e.target.value);\r\n        SpeedTime = value;\r\n        setSpeed(value);\r\n    }\r\n\r\n  return (\r\n    <>\r\n        <Navbar msg='N queens'></Navbar>\r\n        <div className='queen_contianer'>\r\n            <div className='queen_header'>\r\n                <div>\r\n                    <div>\r\n                        <button onClick={startHandle} className='button-4 start-btn queen_btn'>Start Visualize</button>\r\n                        <button onClick={()=>{gridInit()}} className='button-4 queen_btn'>Clear Board</button>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div className='queen_range'>\r\n                        <div className='queenlabel'>\r\n                            Speed:\r\n                        </div>\r\n                        <div>\r\n                            <input type='range' onChange={timeHandle} value={speed} min='120' max='1200' id='speedRange'></input>\r\n                        </div>\r\n                    </div>\r\n                    <div className='queen_range'>\r\n                        <div className='queenlabel'>\r\n                            Size:\r\n                        </div>\r\n                        <div>\r\n                            <input type='range' onChange={(e)=>{setGridSize(parseInt(e.target.value))}} value={gridSize} min='3' max='8' step='1' id='gridSizeRange'></input>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {grid.map((row,i)=>{\r\n            return (<div key={i} className='queen-row'>\r\n                        {row.map((v,j)=>{\r\n                                if((i+j)%2===0) return <div id={`cell-${i}-${j}`} key={j} className='queen-cell gray-cell'></div>\r\n                                return <div id={`cell-${i}-${j}`} key={j} className='queen-cell'></div>\r\n                            })\r\n                        }\r\n                </div>)\r\n            })}\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nasync function waitForAnimatoin(times){\r\n    return new Promise((resolve)=>{\r\n        setTimeout(()=>{\r\n            resolve('');\r\n        },times)\r\n    })\r\n}\r\nexport default N_Queen;","import React from 'react';\nimport {\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport './App.css'\nimport PathfindingVS from './Pages/PathfindingVS'\nimport Home from './Pages/Home';\nimport SortingApp from './Pages/Sorting';\nimport PrimeApp from './Pages/PrimeSpiral';\nimport NQueen from './Pages/N_Queen';\n\nfunction App() {\n\n  return (\n      <div className=\"App\">\n          <Routes>\n            <Route exact path=\"/\" element={<Home/>} />\n            <Route exact path=\"/path-finding\" element={<PathfindingVS/>} />\n            <Route exact path=\"/sorting\" element={<SortingApp/>} />\n            <Route exact path=\"/spiral-prime\" element={<PrimeApp/>} />\n            <Route exact path=\"/nqueens\" element={<NQueen/>} />\n          </Routes>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}